#!/usr/bin/env node
var fs = require('fs'),
    _ = require('underscore'),
    string = require('underscore.string'),
    commander = require('commander'),
    Uglify = require('../lib/uglify');

function parseSourceFiles(val) {
    var sourceFiles = _.map(val.split(','), function(file) {
        if (string.startsWith(file, '~/')) {
            file = process.env.HOME + '/' + string.ltrim(file, '~/');
        } else if (string.startsWith(file, '/') === false) {
            file = process.cwd() + '/' + file;
        }

        if (fs.existsSync(file)) {
            return fs.realpathSync(file);
        }

        return null;
    });

    return _.filter(sourceFiles, function(sourceFile) {
        return sourceFile !== null
    });
}

commander.version('0.1.0')
    .option('-s, --source <items>', 'sorce files', parseSourceFiles, [])
    .option('-o, --output [value]', 'output file', null)
    .option('-c, --css', 'whether uglify css files', false)
    .option('-r, --root [value]', 'static root directory name, used to replace css urls with absolute path', null);

commander.on('--help', function(){
    console.log('  Examples:');
    console.log('');
    console.log('    $ uglify -s ~/application.js,~/home.js -o ~/home.min.js');
    console.log('    $ uglify -s ~/application.css,~/home.css -o ~/home.min.css -c');
    console.log('    $ uglify -s ~/application.css,~/home.css -o ~/home.min.css -r public -c');
    console.log('');
});

commander.parse(process.argv);

uglify = new Uglify(commander.source, commander.output, commander.css, commander.root);
uglify.run();